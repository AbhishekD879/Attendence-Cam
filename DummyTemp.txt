
onPress={() => {
                setType(
                  type === Camera.Constants.Type.back
                    ? Camera.Constants.Type.front
                    : Camera.Constants.Type.back
                );
              }}








              /////

              
import React, { useState, useEffect,useRef } from 'react';
import { StyleSheet, Text, View, TouchableOpacity,Dimensions} from 'react-native';
import { Camera } from 'expo-camera';
import * as FaceDetector from 'expo-face-detector';
let screenHeight=Dimensions.get("window").height;
 let screenWidth=Dimensions.get('window').width;
const CameraModule = () => {

    const [hasPermission, setHasPermission] = useState(null);
    const [type, setType] = useState(Camera.Constants.Type.back);
  
    useEffect(() => {
      (async () => {
        const { status } = await Camera.getCameraPermissionsAsync();
        setHasPermission(status === 'granted');
       
      })();
    }, []);
  
    if (hasPermission === null) {
      return <View />;
    }
    if (hasPermission === false) {
      return <Text>No access to camera</Text>;
    }


    const cam=useRef().current
    const __takePicture= async()=>{

        const options={
            base64:true,
            exif:true,

        }
        if(cam){
            const picture= await cam.takePictureAsync(options)
        }
        
        

    }


    return (
        <View style={{ 

           flex:1,
           justifyContent:'center',
           alignItems:'center'

        }}>
        <Camera style={{ 
            width:screenWidth,
            height:Math.round((screenHeight*80)/100),
         }} 
         ref={cam}
         type={type}
         faceDetectorSettings={{
              mode: FaceDetector.FaceDetectorMode.fast,
              detectLandmarks: FaceDetector.FaceDetectorLandmarks.none,
              runClassifications: FaceDetector.FaceDetectorClassifications.none,
              minDetectionInterval: 100,
              tracking: true,
            }}
         ratio={"16:9"}
         focusDepth={1}
         zoom={0}
         useCamera2Api={true}
         
         >
          <View
            style={{
              flex: 1,
              backgroundColor: 'transparent',
              flexDirection: 'row',
            }}>
            <TouchableOpacity
              style={{
                flex: 0.1,
                alignSelf: 'flex-end',
                alignItems: 'center',
              }}
              >
              <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>
            </TouchableOpacity>
          </View>
        </Camera>
      </View>
    )
}

export default CameraModule
